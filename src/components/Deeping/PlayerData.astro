---
import type { UserLeaderboard, UserLive } from "../../types/api";
import { getRoute } from "../../utils/cache";
import { heightToFloor } from "../../utils/floor";
import { timeDifference } from "../../utils/time";

interface Props {
  wsid: string;
}

const { wsid } = Astro.props;

const PB_ROUTE = "https://dips-plus-plus.xk.io/leaderboard/" + wsid;
const LIVE_ROUTE = "https://dips-plus-plus.xk.io/live_heights/" + wsid;

const data_pb: UserLeaderboard = await getRoute(PB_ROUTE);
const data_live: UserLive = await getRoute(LIVE_ROUTE);

const connected = Boolean(data_live.last_5_points.length);
---

<div
  hx-swap="outerHTML"
  hx-get={"/api/user/" + wsid}
  hx-trigger="every 20s"
  hx-target="this"
>
  <table>
    <tr>
      <td> Rank </td>
      <td> PB Floor </td>
      <td> PB </td>
      {connected && <td> Current Floor </td>}
      {connected && <td> Current Height </td>}
      {connected && <td> Last update* </td>}
    </tr>
    <tr id="spacer">
      <td></td>
      <td></td>
      <td></td>
      {connected && <td />}
      {connected && <td />}
      {connected && <td />}
    </tr>
    <tr>
      <td> {data_pb.rank} </td>
      <td> {heightToFloor(data_pb.height)} </td>
      <td> {data_pb.height.toFixed(2)} </td>
      {connected && <td> {heightToFloor(data_live.last_5_points[0]![0]!)} </td>}
      {connected && <td> {data_live.last_5_points[0]![0]!.toFixed(2)} </td>}
      {
        connected && (
          <td>
            {timeDifference(Date.now(), data_live.last_5_points[0]![1]! * 1000)}
          </td>
        )
      }
    </tr>

    <style>
      table {
        width: 100%;
      }

      .spacer {
        height: 1rem;
      }
    </style>
  </table>

  <div class="spacer"></div>
  <span> * Last update from their plug-in </span>
</div>
